/*
Follow up for "Unique Paths":

Now consider if some obstacles are added to the grids. How many unique paths would there be?

An obstacle and empty space is marked as 1 and 0 respectively in the grid.

For example,
There is one obstacle in the middle of a 3x3 grid as illustrated below.

[
  [0,0,0],
  [0,1,0],
  [0,0,0]
]
*/
public class Solution {
    public int uniquePathsWithObstacles(int[][] obstacleGrid) {
         int m=obstacleGrid.length;
		 int n=obstacleGrid[0].length;
        if(obstacleGrid[0][0]==1||obstacleGrid[m-1][n-1]==1)
			 return 0;
        	
		 int [][]path=new int[m][n];
	        path[0][0]=1;
	        for(int i=1;i<n;i++){
	        	if(obstacleGrid[0][i]==1)
	        	   break;
	        	else 
	        		path[0][i]=1;									
	        }
	        for(int i=1;i<m;i++){
	        	if(obstacleGrid[i][0]==1)
		        	   break;
		        else 
		        	path[i][0]=1;
	        }
	        for(int i=1;i<m;i++){
	        	for(int j=1;j<n;j++){
	        		if(obstacleGrid[i][j]==1){
	        			continue;
	        		}else{
	        			path[i][j]=path[i][j-1]+path[i-1][j];
	        		}
	        	}
	        }
	        return path[m-1][n-1];	
    }
}
